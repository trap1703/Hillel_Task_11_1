#!/bin/env groovy

node {
    deleteDir()
    checkout scm

    files = sh(returnStdout: true, script: 'ls')
    p_files = files.split("\n").collect()[0,1]
    println (p_files)
    F_files = sh(returnStdout:true, script: "cat ${p_files[0]}")
    F_files = F_files.split("\n").collect()
    println (F_files)    
    XX_files = sh(returnStdout:true, script: "cat ${p_files[1]}")
    YY_files = XX_files.split("\n").collect()
    println (YY_files)
    properties([parameters([[$class: 'ChoiceParameter', choiceType: 'PT_SINGLE_SELECT', description: '', filterLength: 1, filterable: false, name: 'file', randomName: 'choice-parameter-5757599075366', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: false, script: ''], script: [classpath: [], sandbox: false, script: 'echo $p_files'
]''']]], [$class: 'CascadeChoiceParameter', choiceType: 'PT_SINGLE_SELECT', description: '', filterLength: 1, filterable: false, name: 'value', randomName: 'choice-parameter-5757609680641', referencedParameters: '', script: [$class: 'GroovyScript', fallbackScript: [classpath: [], sandbox: false, script: ''], script: [classpath: [], sandbox: false, script: 'if(files.equals("${p_files[0]}")) {return ["param1", "param2", "param3"]}  else if (files.equals("${p_files[1]}")) {return ["test1", "test2", "test3"]}']]]])])
   
}
